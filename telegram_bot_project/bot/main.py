from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.enums import ParseMode
import os
import feedparser
from google.cloud import translate_v2 as translate
from google.cloud import vision
import requests

bot = Bot(token=os.getenv("TELEGRAM_TOKEN"))
dp = Dispatcher()
translator = translate.Client()

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("üçè –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –µ–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–ª–æ—Ä–∏–π –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /workout –¥–ª—è –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.")

@dp.message(lambda msg: msg.photo)
async def analyze_photo(message: types.Message):
    photo = message.photo[-1]
    file = await bot.get_file(photo.file_id)
    img_url = f"https://api.telegram.org/file/bot{os.getenv('TELEGRAM_TOKEN')}/{file.file_path}"

    vision_client = vision.ImageAnnotatorClient()
    image = vision.Image(source=vision.ImageSource(image_uri=img_url))
    response = vision_client.label_detection(image=image)

    labels = [label.description for label in response.label_annotations]
    food_item = labels[0] if labels else "–µ–¥–∞"

    nutritionix_url = "https://trackapi.nutritionix.com/v2/natural/nutrients"
    headers = {"x-app-id": os.getenv("NUTRITIONIX_ID"), "x-app-key": os.getenv("NUTRITIONIX_KEY")}
    data = {"query": f"100g {food_item}"}

    try:
        calories = requests.post(nutritionix_url, headers=headers, json=data).json()["foods"][0]["nf_calories"]
        await message.answer(f"üçΩ {food_item}: ~{calories} –∫–∫–∞–ª –Ω–∞ 100–≥")
    except:
        await message.answer("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–ª–æ—Ä–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.")

@dp.message(Command("workout"))
async def generate_workout(message: types.Message):
    text = '''
    üí™ –í–∞—à –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (–≤–µ—Å 75 –∫–≥, —Ä–æ—Å—Ç 168 —Å–º):
    - –ü–Ω: –ö–∞—Ä–¥–∏–æ 30 –º–∏–Ω + –ø—Ä–µ—Å—Å.
    - –°—Ä: –°–∏–ª–æ–≤–∞—è (–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è, –æ—Ç–∂–∏–º–∞–Ω–∏—è).
    - –ü—Ç: –ü–ª–∞–≤–∞–Ω–∏–µ –∏–ª–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥.
    '''
    await message.answer(text)
